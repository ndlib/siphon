FROM phusion/passenger-full

# Update and install sudo, shared-mime-info to prevent mimemagic errors, postfix to prevent MTA errors
RUN apt-get update && apt-get install -y sudo shared-mime-info postfix

# RUN apt-get update && apt-get upgrade -y -o Dpkg::Options::="--force-confold" && apt-get install -y shared-mime-info postfix sudo

# Set correct environment variables.
ENV HOME /home/app/siphon

# Use baseimage-docker's init process.
CMD ["/sbin/my_init"]

# RUN bash -lc 'rvm install ruby-2.6.7'
RUN bash -lc 'rvm --default use ruby-2.6.7'

ENV PASSENGER_RUN_ENV development

ENV APP_DIR /home/app/siphon
ENV TZ America/Indiana/Indianapolis
ENV DB_HOST <%= ENV['DB_HOST'] %>
ENV DB_NAME <%= ENV['DB_NAME'] %>
ENV DB_USER <%= ENV['DB_USER'] %>
ENV DB_PASSWORD <%= ENV['DB_PASSWORD'] %>
ENV AUTH_SERVER_ID <%= ENV['AUTH_SERVER_ID'] %>
ENV BASE_AUTH <%= ENV['BASE_AUTH'] %>
ENV CLIENT_ID <%= ENV['CLIENT_ID'] %>
ENV CLIENT_SECRET <%= ENV['CLIENT_SECRET'] %>
ENV HOST_NAME <%= ENV['HOST_NAME'] %>
ENV SECRET_KEY_BASE <%= ENV['SECRET_KEY_BASE'] %>

# Set timezone
RUN ln -s /usr/share/zoneinfo/$TZ localtime

# Set up folder, files and needed bundle gem objects
RUN mkdir $APP_DIR
ADD . $APP_DIR
WORKDIR $APP_DIR
COPY Gemfile $APP_DIR
COPY Gemfile.lock $APP_DIR
RUN chown -R app:app $APP_DIR

# Without this, I get an error when trying to run rails but with it the website won't run
# RUN gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
# RUN \curl -sSL https://get.rvm.io | bash -s stable --ruby

# USER app
RUN gem install bundler:1.17.3
# RUN gem install mimemagic:0.3.10
RUN sudo -u app bundle install
# RUN bundle install
# USER root

# Fix Postfix MTA
RUN mkfifo /var/spool/postfix/public/pickup

# Enable nginx and passenger
RUN rm -f /etc/service/nginx/down
RUN rm /etc/nginx/sites-enabled/default
ADD webapp.conf /etc/nginx/sites-enabled/webapp.conf

# Copy Aleph cron file to the cron.d directory
COPY import_aleph_crontab.txt /etc/cron.d/import_aleph_crontab.txt
 
# Give execution rights on the cron job
RUN chmod 0644 /etc/cron.d/import_aleph_crontab.txt

# Apply cron job
RUN crontab /etc/cron.d/import_aleph_crontab.txt
 
# Set up application to run
COPY docker-entrypoint.sh /usr/bin/docker-entrypoint.sh
RUN chmod +x /usr/bin/docker-entrypoint.sh
ENTRYPOINT ["/usr/bin/docker-entrypoint.sh"]

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*